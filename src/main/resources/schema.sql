create type role as enum ('ROLE_ADMIN', 'ROLE_DRIVER', 'ROLE_CLIENT');

create sequence user_id_seq;
create table "User"(
                       user_id int generated by default as identity primary key,
                       name varchar(100) not null ,
                       email varchar(100) not null unique ,
                       password varchar(100) not null,
                       banned bool not null default false,
                       role role not null default 'ROLE_CLIENT'::role
);

create table "Client"(
                         client_id int generated by default as identity primary key references "User"(user_id) on delete cascade ,
                         phone_number varchar(13) not null unique ,
                         rating double precision not null default 0,
                         has_active_order bool not null default false,
                         bonus_amount float not null default 0,
                         number_of_ratings int not null default 0,
                         total_ratings int not null default 0
);

create type car_class as enum ('ECONOMY', 'BUSINESS');
create type vehicle_type as enum ('SEDAN', 'HATCHBACK', 'MINIVAN', 'MINIBUS');

create table "Car"(
                      car_id int generated by default as identity primary key ,
                      license_plate varchar(8) not null unique ,
                      model varchar(100) not null ,
                      color varchar(20) not null ,
                      car_class car_class not null ,
                      vehicle_type vehicle_type not null
);

create table "Driver"(
                         driver_id int generated by default as identity primary key references "User"(user_id) on delete cascade ,
                         license_number varchar(10) not null unique ,
                         rating double precision not null default 0,
                         phone_number varchar(13) not null unique ,
                         busy bool not null default false,
                         car_id int unique references "Car"(car_id) on delete set null,
                         number_of_ratings int not null default 0,
                         total_ratings int not null default 0
);

create type payment_type as enum ('CASH', 'CARD');
create type order_status as enum ('NOT_ACCEPTED', 'ACCEPTED', 'WAITING_FOR_CLIENT', 'IN_PROCESS', 'COMPLETED', 'RATED_BY_CLIENT', 'RATED_BY_DRIVER', 'RATED_BY_ALL');

create table "Order"(
                        order_id int generated by default as identity primary key ,
                        client_id int references "Client"(client_id) on delete set null ,
                        driver_id int references "Driver"(driver_id) on delete set null ,
                        booking_datetime varchar not null ,
                        pickup_address varchar(100) not null ,
                        destination_address varchar(100) not null ,
                        journey_distance decimal(10,2) not null ,
                        passenger_name varchar(100),
                        passenger_phone_number varchar(13),
                        booking_notes varchar(300),
                        payment_type payment_type not null ,
                        pay_with_bonuses bool not null ,
                        car_class car_class not null ,
                        vehicle_type vehicle_type not null ,
                        price decimal(10,2) not null ,
                        order_status order_status not null default 'NOT_ACCEPTED'::order_status
)